#!groovy

/* A Jenkins "Declarative" Pipeline file.
See http://130.56.252.251:32779
*/

pipeline {
  
  // define the docker environment to run the pipeline in.
  agent {
      docker { 
        image 'underworldcode/underworld2:dev'

        // special label to jenkins config. See http://130.56.252.251:32779/computer/
        label 'slave'
      }
  }

  stages {

    // Build stage: compile the code
    stage('Build') {
      steps {
        dir("./libUnderworld") {
          sh './configure.py'
          sh './compile.py'
        }
      }
    }
    
    // Test stage: runs the basic tests
    stage('Basic Tests') {
      steps {
        sh 'source updatePyPath.sh'
        
        /* TODO: Undo this solution to image_tests.py 
        Disable ./doc/test/image_tests.py from the 'Test' stage. It shows
        instabilities when run with other tests on jenkins.  
        */
        
        sh 'mv ./docs/test/image_tests.py ./docs/test/image_tests.py.disable'
        sh 'sh ./test_basic.sh'
        sh 'mv ./docs/test/image_tests.py.disable ./docs/test/image_tests.py'
      }
    }
    
    // Run image_test.py separately, if it fails mark build 'UNSTABLE'
    stage('image_tests') {
      steps {
        script {
          try{
            dir("./utils") {
              sh './run_tests.py ../doc/test/image_tests.py'
            }
          }
          catch(exc) {
            currentBuild.result = 'UNSTABLE'
            echo 'The image test phase failed. Not critical'
          }
        }
      }
    }
  }
  
  /* For post build analysis */
  post {
    failure {
      // notify users when the Pipeline fails
      emailext (
          subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
          body: "Something is wrong with ${env.BUILD_URL}",
          // mimeType: 'text/html',
          to: 'underworlddev@googlegroups.com'
        )
    }
    unstable {
      // notify users when the Pipeline fails
      emailext (
          subject: "Unstable Pipeline: ${currentBuild.fullDisplayName}",
          body: "Something is unstable with ${env.BUILD_URL}",
          // mimeType: 'text/html',
          to: 'underworlddev@googlegroups.com'
        )
    }
    success {
      script {
        if (currentBuild.previousBuild != null && currentBuild.previousBuild.result != 'SUCCESS') {
          emailext (
            subject: "Back to normal: ${currentBuild.fullDisplayName}",
            body: "Project is back to normal",
            // mimeType: 'text/html',
            to: 'underworlddev@googlegroups.com'
          )
        }
      }
    }
  }
}
